---
import { getLangFromUrl, useTranslations, translatePath } from '../i18n/utils';

interface Props {
  title: string;
  description?: string;
  currentLanguage: string;
  currentPath: string;
  isOnePageLayout?: boolean;
}

const {
  title,
  description = "Web Development and AI Studio",
  currentLanguage = 'en',
  currentPath,
  isOnePageLayout = false
} = Astro.props;

const lang = currentLanguage;
const t = useTranslations(lang);

// Create language switch paths
const enPath = '/en/';
const ruPath = '/ru/';

// Navigation items
const navItems = [
  { name: t('nav.home'), path: isOnePageLayout ? `#home` : `/${lang}/` },
  { name: t('nav.services'), path: isOnePageLayout ? `#services` : `/${lang}/services` },
  { name: t('nav.projects'), path: isOnePageLayout ? `#projects` : `/${lang}/projects` },
  { name: t('nav.about'), path: isOnePageLayout ? `#about` : `/${lang}/about` },
  { name: t('nav.contact'), path: isOnePageLayout ? `#contact` : `/${lang}/contact` },
];

const year = new Date().getFullYear();
---

<!DOCTYPE html>
<html lang={lang}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content={description} />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <title>{title}</title>
    <style is:global>
      :root {
        --primary-color: #3a86ff;
        --dark-color: #2b3452;
        --light-color: #f8f9fa;
        --grey-color: #6c757d;
        --header-height: 80px;
        --max-width: 1200px;
      }

      * {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
      }

      body {
        font-family: 'Inter', sans-serif;
        line-height: 1.6;
        color: var(--dark-color);
        background-color: #fff;
        overflow-x: hidden;
      }

      .container {
        max-width: var(--max-width);
        margin: 0 auto;
        padding: 0 2rem;
      }

      img {
        max-width: 100%;
      }

      .section-title {
        text-align: center;
        font-size: 2.5rem;
        margin-bottom: 3rem;
        position: relative;
      }

      .section-title::after {
        content: '';
        position: absolute;
        bottom: -15px;
        left: 50%;
        transform: translateX(-50%);
        width: 80px;
        height: 4px;
        background-color: var(--primary-color);
      }
    </style>
  </head>
  <body>
    <header class="site-header">
      <div class="container">
        <div class="header-content">
          <a href={`/${lang}/`} class="logo">
            <span class="logo-text">azamat.ai</span>
          </a>

          <nav class="main-nav">
            <button class="mobile-menu-toggle" aria-label="Toggle Navigation">
              <span class="bar"></span>
              <span class="bar"></span>
              <span class="bar"></span>
            </button>

            <ul class="nav-links">
              {navItems.map(item => (
                <li>
                  <a
                    href={item.path}
                    class={currentPath === item.path ? 'active' : ''}
                  >
                    {item.name}
                  </a>
                </li>
              ))}
              <li class="language-switcher">
                <a href={enPath} class={lang === 'en' ? 'active' : ''}>EN</a>
                <span class="language-divider">/</span>
                <a href={ruPath} class={lang === 'ru' ? 'active' : ''}>RU</a>
              </li>
            </ul>
          </nav>
        </div>
      </div>
    </header>

    <main>
      <slot />
    </main>

    <footer class="site-footer">
      <div class="container">
        <div class="footer-content">
          <div class="footer-social">
            <a href="https://github.com/khazidhea" target="_blank" rel="noopener noreferrer" title="GitHub">
              <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"></path>
              </svg>
            </a>
            <a href="https://kz.linkedin.com/in/azamatgalimzhanov" target="_blank" rel="noopener noreferrer" title="LinkedIn">
              <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z"></path>
                <rect x="2" y="9" width="4" height="12"></rect>
                <circle cx="4" cy="4" r="2"></circle>
              </svg>
            </a>
            <a href="https://instagram.com/aza_ai_expert" target="_blank" rel="noopener noreferrer" title="Instagram">
              <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <rect x="2" y="2" width="20" height="20" rx="5" ry="5"></rect>
                <path d="M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z"></path>
                <line x1="17.5" y1="6.5" x2="17.51" y2="6.5"></line>
              </svg>
            </a>
            <a href="https://www.upwork.com/freelancers/~0175965a964daec5d8" target="_blank" rel="noopener noreferrer" title="Upwork">
              <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M18.561 13.158c-1.102 0-2.135-.467-3.074-1.227l.228-1.076.008-.042c.207-1.143.849-3.06 2.839-3.06 1.492 0 2.703 1.212 2.703 2.703-.001 1.489-1.212 2.702-2.704 2.702zm0-8.14c-2.539 0-4.51 1.649-5.31 4.366-1.22-1.834-2.148-4.036-2.687-5.892H7.828v7.112c-.002 1.406-1.141 2.546-2.547 2.548-1.405-.002-2.543-1.143-2.545-2.548V3.492H0v7.112c0 2.914 2.37 5.303 5.281 5.303 2.913 0 5.283-2.389 5.283-5.303v-1.19c.529 1.107 1.182 2.229 1.974 3.221l-1.673 7.873h2.797l1.213-5.71c1.063.679 2.285 1.109 3.686 1.109 3 0 5.439-2.452 5.439-5.45 0-3-2.439-5.439-5.439-5.439z"/>
              </svg>
            </a>
            <a href="https://codementor.io/@azamatgalimzhanov" target="_blank" rel="noopener noreferrer" title="Codementor">
              <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M9.86 8.46C9.07 8.04 8.31 7.58 8.31 6.4c0-1.91 1.6-2.4 2.93-2.4 1.33 0 3.08.4 3.08 2.05 0 .95-.7 1.4-1.67 1.4-1.52 0-1.52-1.05-3.08-1.05-1.51 0-1.51.77-1.51 1.05 0 .45.3.8.8 1.02m3.79 2.69c-.3.42-.5.62-.5 1.06 0 .6.29.86.66 1.1.42.23.59.52.59.92 0 .77-.63 1.34-1.43 1.34-.77 0-1.22-.5-1.7-.98-.65.63-1.44 1.02-2.4 1.02-1.05 0-1.94-.5-2.55-1.34.86-.74 1.63-1.52 1.63-2.66 0-1.14-.6-1.58-1.48-2.06C4.72 9 4 8.19 4 6.72c0-2.1 2.66-3.93 4.68-3.93.9 0 1.86.23 2.7.62.97-.39 2-.62 3.03-.62C18.16 2.79 21 5.63 21 9.28c0 3.65-2.86 6.5-6.5 6.5-1.27 0-2.48-.37-3.52-1"/>
              </svg>
            </a>
          </div>

          <div class="footer-bottom">
            <p>Â© {year} azamat.ai</p>
          </div>
        </div>
      </div>
    </footer>
  </body>
</html>

<style>
  /* Site header */
  .site-header {
    background-color: white;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    height: var(--header-height);
    position: fixed; /* Make header fixed */
    width: 100%;
    top: 0;
    left: 0;
    z-index: 1000;
  }

  /* Add margin to main content to prevent overlap with fixed header */
  main {
    margin-top: var(--header-height);
  }

  .header-content {
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: var(--header-height);
  }

  .logo {
    text-decoration: none;
  }

  .logo-text {
    font-size: 1.8rem;
    font-weight: 700;
    color: var(--dark-color);
  }

  /* Navigation */
  .main-nav {
    display: flex;
    align-items: center;
  }

  .nav-links {
    display: flex;
    list-style: none;
    align-items: center;
  }

  .nav-links li {
    margin-left: 2rem;
  }

  .nav-links a {
    text-decoration: none;
    color: var(--dark-color);
    font-weight: 500;
    position: relative;
    transition: color 0.3s ease;
  }

  .nav-links a::after {
    content: '';
    position: absolute;
    bottom: -5px;
    left: 0;
    width: 0;
    height: 2px;
    background-color: var(--primary-color);
    transition: width 0.3s ease;
  }

  .nav-links a:hover, .nav-links a.active {
    color: var(--primary-color);
  }

  .nav-links a:hover::after, .nav-links a.active::after {
    width: 100%;
  }

  .language-switcher {
    display: flex;
    align-items: center;
  }

  .language-switcher a {
    padding: 0.4rem 0.5rem;
    color: var(--grey-color);
    font-weight: 500;
    transition: all 0.3s ease;
    text-decoration: none;
  }

  .language-switcher a.active {
    color: var(--primary-color);
    font-weight: 700;
  }

  .language-switcher a:hover:not(.active) {
    color: var(--dark-color);
  }

  .language-divider {
    color: var(--grey-color);
    margin: 0 2px;
  }

  .language-switcher a::after {
    display: none;
  }

  .mobile-menu-toggle {
    display: none;
    flex-direction: column;
    justify-content: space-between;
    width: 30px;
    height: 21px;
    background: transparent;
    border: none;
    cursor: pointer;
    padding: 0;
    z-index: 10;
  }

  .bar {
    width: 100%;
    height: 3px;
    background-color: var(--dark-color);
    transition: all 0.3s ease;
  }

  /* Footer Styles */
  .site-footer {
    background-color: var(--dark-color);
    color: white;
    padding: 3rem 0 2rem;
    margin-top: 4rem;
  }

  .footer-content {
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .footer-social {
    display: flex;
    gap: 1.5rem;
    margin-bottom: 2rem;
  }

  .footer-social a {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background-color: rgba(255, 255, 255, 0.1);
    color: white;
    transition: all 0.3s ease;
  }

  .footer-social a:hover {
    background-color: var(--primary-color);
    transform: translateY(-3px);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
  }

  .footer-bottom {
    text-align: center;
    color: rgba(255, 255, 255, 0.5);
    font-size: 0.9rem;
  }

  /* Mobile styles */
  @media (max-width: 768px) {
    .mobile-menu-toggle {
      display: flex;
    }

    .nav-links {
      position: fixed;
      top: 0;
      right: 0;
      transform: translateX(100%);
      width: 70%;
      height: 100vh;
      background-color: white;
      flex-direction: column;
      padding: 2rem;
      box-shadow: -5px 0 15px rgba(0, 0, 0, 0.1);
      transition: transform 0.3s ease;
      align-items: flex-start;
      padding-top: 5rem;
      z-index: 5;
    }

    .nav-links.active {
      transform: translateX(0);
    }

    .nav-links li {
      margin: 1rem 0;
    }

    .language-switcher {
      margin-top: 2rem;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const menuToggle = document.querySelector('.mobile-menu-toggle');
    const navLinksContainer = document.querySelector('.nav-links');

    menuToggle?.addEventListener('click', () => {
      navLinksContainer?.classList.toggle('active');
    });

    navLinksContainer?.querySelectorAll('a').forEach(link => {
      link.addEventListener('click', () => {
        navLinksContainer.classList.remove('active');
      });
    });

    // Smooth scroll for anchor links
    const anchorLinks = document.querySelectorAll('a[href^="#"]');

    anchorLinks.forEach(link => {
      link.addEventListener('click', (e) => {
        e.preventDefault();

        // ÐÐ±ÑÐ°Ð±Ð¾ÑÐºÐ° Ð¾ÑÐ¾Ð±Ð¾Ð³Ð¾ ÑÐ»ÑÑÐ°Ñ Ð´Ð»Ñ #home, ÑÐºÑÐ¾Ð»Ð»Ð¸Ð¼ Ð² ÑÐ°Ð¼ÑÐ¹ Ð²ÐµÑÑ
        if (link.getAttribute('href') === '#home') {
          window.scrollTo({
            top: 0,
            behavior: 'smooth'
          });
          return;
        }

        const target = document.querySelector(link.getAttribute('href'));
        if (target) {
          window.scrollTo({
            top: target.offsetTop - 80, // ÐÑÑÐ¸ÑÐ°ÐµÐ¼ Ð²ÑÑÐ¾ÑÑ ÑÐµÐ´ÐµÑÐ°
            behavior: 'smooth'
          });
        }
      });
    });

    // Active navigation based on scroll position
    const sections = document.querySelectorAll('section[id]');
    const navLinks = document.querySelectorAll('.nav-links a[href^="#"]');

    function highlightActiveSection() {
      // Ð¡Ð¿ÐµÑÐ¸Ð°Ð»ÑÐ½Ð°Ñ Ð¾Ð±ÑÐ°Ð±Ð¾ÑÐºÐ° Ð´Ð»Ñ Ð²ÐµÑÑÐ½ÐµÐ¹ ÑÐµÐºÑÐ¸Ð¸ (#home)
      if (window.scrollY < 100) {
        navLinks.forEach(link => {
          link.classList.remove('active');
          if (link.getAttribute('href') === '#home') {
            link.classList.add('active');
          }
        });
        return;
      }

      const scrollPosition = window.scrollY + 100;

      sections.forEach(section => {
        const sectionTop = section.offsetTop;
        const sectionHeight = section.offsetHeight;
        const sectionId = section.getAttribute('id');

        if (scrollPosition >= sectionTop && scrollPosition < sectionTop + sectionHeight) {
          navLinks.forEach(link => {
            link.classList.remove('active');
            if (link.getAttribute('href') === `#${sectionId}`) {
              link.classList.add('active');
            }
          });
        }
      });
    }

    window.addEventListener('scroll', highlightActiveSection);
    highlightActiveSection(); // Initial check
  });
</script>